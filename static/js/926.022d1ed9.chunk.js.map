{"version":3,"file":"static/js/926.022d1ed9.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.js"],"sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const selectContacts = state => state.contacts.contacts.items;\r\n\r\nexport const selectIsLoading = state => state.contacts.contacts.isLoading;\r\n\r\nexport const selectError = state => state.contacts.contacts.error;\r\n\r\nexport const selectFilter = state => state.filter.filter;\r\n\r\nexport const selectFilteredContacts = createSelector([selectContacts, selectFilter], (contacts, filter) => {\r\n    return contacts.filter(contact =>\r\n        contact.name.toLowerCase().includes(filter.toLowerCase()));\r\n})","import styled from \"styled-components\";\r\nimport {Form, Field} from \"formik\"\r\nimport { Button } from \"@mui/material\";\r\nimport InputMask from 'react-input-mask';\r\nimport AddIcCallIcon from '@mui/icons-material/AddIcCall';\r\n\r\nexport const ContactsForm = styled(Form)`\r\ndisplay: flex;\r\ngap: 4px;\r\nflex-direction: column;`\r\n\r\nexport const FormBtn = styled(Button)`\r\nheight: 35px;\r\n\r\n@media screen and (min-width: 740px) {\r\n    margin-left: auto !important;\r\n  }\r\n`\r\n\r\nexport const ContactsFormWrap = styled.div`\r\ndisplay: flex;\r\ngap: 8px;\r\nflex-direction: column;\r\n\r\n@media screen and (min-width: 740px) {\r\n    align-items: flex-end;\r\n    flex-direction: row;\r\n  }`\r\n\r\nexport const ContactsField = styled(Field)`\r\nborder-color: #1976d2;\r\nopacity: 50%;\r\nwidth: 100%;\r\nheight: 35px;\r\nfont-size: 16px;\r\ntext-indent: 8px;\r\nborder-radius: 5px;\r\n\r\n@media screen and (min-width: 740px) {\r\n    width: 230px;\r\n    font-size: 18px;\r\n  }`\r\n\r\nexport const ContactField = styled(InputMask)`\r\nborder-color: #1976d2;\r\nopacity: 50%;\r\nwidth: 100%;\r\nheight: 35px;\r\nfont-size: 16px;\r\ntext-indent: 8px;\r\nborder-radius: 5px;\r\n\r\n@media screen and (min-width: 740px) {\r\n    width: 230px;\r\n    font-size: 18px;\r\n  }`\r\n\r\nexport const FieldWrap = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;`\r\n\r\nexport const FormLabel = styled.label`\r\ncolor: rgba(0, 0, 0, 0.65);\r\nmargin-bottom: 4px;`\r\n\r\nexport const AddContact = styled(AddIcCallIcon)`\r\nmargin-left: 8px;`","import { Formik } from \"formik\";\r\nimport * as Yup from 'yup';\r\nimport toast from \"react-hot-toast\";\r\nimport { ContactsForm, ContactsField, ContactsFormWrap, FormBtn, FieldWrap, FormLabel, ContactField, AddContact } from \"./ContactForm.styled\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addContacts } from \"../../redux/contacts/operations\";\r\nimport { selectContacts } from \"../../redux/contacts/selectors\";\r\n\r\nconst contactSchema = Yup.object().shape({\r\n    name: Yup.string().required(\"Обов'язково\"),\r\n    number: Yup.string()\r\n    .matches(/^\\d{3}-\\d{2}-\\d{2}-\\d{3}$/g, 'Приклад: xxx-xx-xx-xxx')\r\n    .required(\"Обов'язково\")\r\n})\r\n\r\nexport const ContactForm = () => {\r\n    const dispatch = useDispatch();\r\n    const contacts = useSelector(selectContacts)\r\n\r\n    return(\r\n        <Formik initialValues={{\r\n            name: '',\r\n            number: ''\r\n        }}\r\n        validationSchema={contactSchema}\r\n        onSubmit={(values, actions) => {\r\n            const isDuplicate = contacts.some((contact) =>\r\n            contact.name.toLowerCase() === values.name.toLowerCase() ||\r\n            contact.number === values.number\r\n        );\r\n\r\n        if (isDuplicate) {\r\n            toast.error('Цей контакт вже є у вашій контактній книзі!');\r\n            actions.resetForm();\r\n        } else{\r\n            dispatch(addContacts(values));\r\n            actions.resetForm();\r\n        }\r\n        }}>\r\n        {({ values, handleChange, handleBlur }) => (\r\n            <ContactsForm>\r\n                <ContactsFormWrap>\r\n                    <FieldWrap>\r\n                        <FormLabel htmlFor=\"name\">Ім'я студента:</FormLabel>\r\n                        <ContactsField type=\"text\" name=\"name\" required />\r\n                    </FieldWrap>\r\n                    <FieldWrap>\r\n                        <FormLabel htmlFor=\"number\">Телефон:</FormLabel>\r\n                        <ContactField \r\n                            mask=\"999-99-99-999\" \r\n                            maskChar=\"_\"\r\n                            value={values.number}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            name=\"number\"\r\n                            required\r\n                        />\r\n                    </FieldWrap>\r\n                    <FormBtn variant=\"contained\" type=\"submit\">Додати \r\n                        <AddContact sx={{fontSize: 22}}/>\r\n                    </FormBtn>\r\n                </ContactsFormWrap>\r\n            </ContactsForm>\r\n        )}\r\n        </Formik>\r\n    )\r\n}","import styled from \"styled-components\";\r\nimport { Button } from \"@mui/material\";\r\n\r\nexport const ContactsList = styled.ul`\r\ndisplay: flex;\r\nflex-direction: column;\r\ngap: 8px;\r\nmargin-top: 8px;\r\n\r\n@media screen and (min-width: 740px) {\r\n    margin-top: 12px;\r\n  }`\r\n\r\nexport const ContactsListItem = styled.li`\r\nfont-size: large;\r\ndisplay: flex;\r\nflex-direction: column;\r\ngap: 8px;\r\nborder: 2px solid rgba(25, 118, 210, 0.5);\r\nborder-radius: 5px;\r\npadding: 6px;\r\n\r\n@media screen and (min-width: 740px) {\r\n    flex-direction: row;\r\n    align-items: baseline;\r\n    gap: 16px;\r\n    border: none;\r\n    padding: 0;\r\n  }`\r\n\r\nexport const DeleteBtn = styled(Button)`\r\nmargin-left: auto !important;\r\n\r\n&:hover {\r\n    background-color: #d32f2f !important;\r\n}`","import { selectFilteredContacts } from \"../../redux/contacts/selectors\";\r\nimport { ContactsList, ContactsListItem, DeleteBtn } from \"./ContactList.styled\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { deleteContact } from \"../../redux/contacts/operations\";\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\n\r\nexport const ContactList = () => {\r\n    const dispatch = useDispatch();\r\n    const contacts = useSelector(selectFilteredContacts);\r\n\r\n    return(\r\n        <ContactsList>\r\n            {contacts.map(item => \r\n            <ContactsListItem key={item.id}>\r\n                <p>{item.name}: </p><i>{item.number}</i>\r\n                <DeleteBtn variant=\"contained\" size=\"small\" onClick={()=>dispatch(deleteContact(item.id))}>\r\n                    <DeleteIcon data-testid=\"DeleteIcon\"></DeleteIcon>\r\n                </DeleteBtn>\r\n            </ContactsListItem>)}\r\n        </ContactsList>\r\n    )\r\n}","import styled from \"styled-components\";\r\nimport { TextField } from \"@mui/material\";\r\n\r\nexport const FilterField = styled(TextField)`\r\nwidth: 100% !important;`","import { useDispatch, useSelector } from \"react-redux\"\r\nimport { updateFilter } from \"../../redux/contacts/filterSlice\";\r\nimport { selectFilter } from \"../../redux/contacts/selectors\";\r\nimport { FilterField } from \"./Filter.styled\";\r\n\r\nexport const Filter = () => {\r\n    const dispatch = useDispatch();\r\n    const filter = useSelector(selectFilter);\r\n\r\n    return(\r\n        <div>\r\n            <FilterField id=\"standard-basic\" label=\"Введіть ім'я студента\" variant=\"standard\" type=\"text\" value={filter} \r\n            onChange={e => dispatch(updateFilter(e.target.value))} style={{width: \"600px\"}}/>\r\n        </div>\r\n    )\r\n}","import styled from \"styled-components\"\r\nimport { CircularProgress } from \"@mui/material\"\r\n\r\nexport const AppWrapper = styled.div`\r\ndisplay: flex;\r\ngap: 4px;\r\nflex-direction: column;\r\nborder: 1px solid #1976d2;\r\nbox-shadow: 12px 12px 20px -3px rgba(25,118,210,0.64);\r\npadding: 15px;\r\nwidth: calc(100% - 60px);\r\nbackground-color: white;\r\nmargin: 50px auto;\r\n\r\n@media screen and (min-width: 375px) {\r\n  max-width: 500px;\r\n  }\r\n\r\n@media screen and (min-width: 740px) {\r\n  max-width: 700px;\r\n  gap: 8px;\r\n  margin: 100px auto;\r\n  }\r\n`\r\n\r\nexport const MainTitle = styled.h1`\r\nmargin-bottom: 4px;\r\nfont-size: 22px;\r\n\r\n@media screen and (min-width: 740px) {\r\n    margin-bottom: 8px;\r\n    font-size: 32px;\r\n  }`\r\n\r\nexport const MainTitleWrap = styled.div`\r\ndisplay: flex;\r\ngap: 8px;\r\nalign-items: center;\r\n\r\n@media screen and (min-width: 740px) {\r\n    gap: 12px;\r\n  }`\r\n\r\nexport const ContactTitle = styled.div`\r\ndisplay: flex;\r\ngap: 12px;\r\nalign-items: center;\r\nmargin-top: 12px;`\r\n\r\nexport const ContactLoader = styled(CircularProgress)`\r\ndisplay: block;\r\nmargin: 0 auto;`","import { selectContacts, selectError, selectIsLoading } from \"../../redux/contacts/selectors\"\r\nimport { ContactForm } from \"../../components/ContactForm/ContactForm\"\r\nimport { ContactList } from \"../../components/ContactList/ContactList\"\r\nimport { Filter } from \"../../components/Filter/Filter\"\r\nimport { AppWrapper, MainTitle, MainTitleWrap, ContactTitle, ContactLoader } from \"./Contacts.styled\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { useEffect } from \"react\";\r\nimport { fetchContacts } from \"../../redux/contacts/operations\"\r\nimport ContactPhoneIcon from '@mui/icons-material/ContactPhoneOutlined';\r\nimport RingVolumeIcon from '@mui/icons-material/RingVolume';\r\n\r\nexport default function Contacts() {\r\n  const contacts = useSelector(selectContacts);\r\n  const dispatch = useDispatch();\r\n  const isLoading = useSelector(selectIsLoading);\r\n  const error = useSelector(selectError);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n\r\n    return(\r\n      <AppWrapper>\r\n        <MainTitleWrap>\r\n        <ContactPhoneIcon sx={{fontSize: 44}} color=\"primary\"/>\r\n        <MainTitle>Довідник контактів</MainTitle>\r\n        </MainTitleWrap>\r\n        <ContactForm />\r\n        <ContactTitle>\r\n          <h2>Контакти</h2>\r\n          <RingVolumeIcon color=\"primary\"/>\r\n        </ContactTitle>\r\n        <Filter />\r\n        {isLoading && !error && <ContactLoader/>}\r\n        {contacts.length > 0 && <ContactList />}\r\n      </AppWrapper>\r\n    )\r\n  }"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectFilteredContacts","createSelector","contact","name","toLowerCase","includes","ContactsForm","styled","Form","_templateObject","_taggedTemplateLiteral","FormBtn","Button","_templateObject2","ContactsFormWrap","div","_templateObject3","ContactsField","Field","_templateObject4","ContactField","InputMask","_templateObject5","FieldWrap","_templateObject6","FormLabel","label","_templateObject7","AddContact","AddIcCallIcon","_templateObject8","contactSchema","Yup","shape","required","number","matches","ContactForm","dispatch","useDispatch","useSelector","_jsx","Formik","initialValues","validationSchema","onSubmit","values","actions","some","toast","resetForm","addContacts","children","_ref","handleChange","handleBlur","_jsxs","htmlFor","type","mask","maskChar","value","onChange","onBlur","variant","sx","fontSize","ContactsList","ul","ContactsListItem","li","DeleteBtn","ContactList","map","item","size","onClick","deleteContact","id","DeleteIcon","FilterField","TextField","Filter","e","updateFilter","target","style","width","AppWrapper","MainTitle","h1","MainTitleWrap","ContactTitle","ContactLoader","CircularProgress","Contacts","useEffect","fetchContacts","ContactPhoneIcon","color","RingVolumeIcon","length"],"sourceRoot":""}